{"version":3,"sources":["contexts/pizzaContext.js","components/navbar/navSearch.jsx","components/navbar/navbar.jsx","components/footer/footer.jsx","components/orderSummary/orderSummary.jsx","components/placeOrder/placeOrder.jsx","components/viewOrders/viewOrders.jsx","components/homepage/home.jsx","components/404/notFound.jsx","App.js","serviceWorker.js","index.js"],"names":["PizzaContext","createContext","PizzaContextProvider","props","useState","pizza","setPizza","fetchPizzaOptions","a","fetch","toppingsRes","json","toppings","sauceRes","sauce","cheeseRes","cheese","crustRes","crust","crustTypeRes","crustType","beveragesRes","beverages","crustTypes","crustSizes","useEffect","Provider","value","children","withRouter","query","setQuery","handleSearch","e","preventDefault","length","history","push","className","onSubmit","type","placeholder","onChange","target","onClick","Navbar","to","src","alt","Footer","OrderSummary","order","key","uuidv4","size","parseFloat","price","priceMultiplier","toFixed","amount","Object","keys","map","topping","name","toppingMultiplier","beverage","email","phoneNumber","substring","streetAddress","city","state","zipcode","total","setOrder","useContext","validOrder","setValidOrder","setTotal","errors","setErrors","orderConfirm","setOrderConfirm","validateOrder","includes","window","scrollTo","postOrder","method","headers","body","JSON","stringify","status","handleCrustType","find","id","handleCrustSize","crustSize","handleSauce","handleCheese","handleTopping","currentTarget","classList","contains","toggle","addTopping","getAttribute","removeTopping","filter","handleBeverage","addBeverage","removeBeverage","Fragment","error","required","htmlFor","data-id","onBlur","replace","toppingsPrice","beveragesPrice","forEach","calculateTotal","orders","setOrders","fetchOrders","match","params","response","data","cancelOrder","orderId","newOrders","i","orderTotal","Home","NotFound","App","exact","path","component","ViewOrders","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f2c951db.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const PizzaContext = createContext();\r\n\r\nconst PizzaContextProvider = (props) => {\r\n\r\n    //context state\r\n    const [ pizza, setPizza] = useState(null);\r\n\r\n    //requests\r\n    const fetchPizzaOptions = async () => {\r\n        const toppingsRes = await fetch(\"/api/toppings\");\r\n        const toppings = await toppingsRes.json();\r\n\r\n        const sauceRes = await fetch(\"/api/sauce\");\r\n        const sauce = await sauceRes.json();\r\n\r\n        const cheeseRes = await fetch(\"/api/cheese\");\r\n        const cheese = await cheeseRes.json();\r\n\r\n        const crustRes = await fetch(\"/api/crust\");\r\n        const crust = await crustRes.json();\r\n\r\n        const crustTypeRes = await fetch(\"/api/crust-type\");\r\n        const crustType = await crustTypeRes.json();\r\n\r\n        const beveragesRes = await fetch(\"/api/beverages\");\r\n        const beverages = await beveragesRes.json();\r\n\r\n        setPizza({\r\n            crustTypes: crustType,\r\n            crustSizes: crust,\r\n            cheese: cheese,\r\n            sauce: sauce,\r\n            toppings: toppings,\r\n            beverages: beverages\r\n        })\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!pizza) {\r\n            fetchPizzaOptions();\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <PizzaContext.Provider value={ { pizza: pizza } }>\r\n            { props.children }\r\n        </PizzaContext.Provider>\r\n    )\r\n}\r\n\r\nexport default PizzaContextProvider;","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport \"../../css/navSearch.css\";\r\n\r\nconst NavSearch = (props) => {\r\n\r\n    const [ query, setQuery ] = useState(\"\");\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(query.length > 0) {\r\n            props.history.push(`/orders/${query}`);    \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"nav-search\">\r\n            <div className=\"search-bar\">\r\n                <div className=\"search-box\">\r\n                    <form onSubmit={handleSearch}>\r\n                        <input type=\"text\" placeholder=\"myemail@example.com\" \r\n                            onChange={e => setQuery(e.target.value)}\r\n                        />\r\n                    </form>    \r\n                </div>\r\n                <div className=\"search-btn\">\r\n                    <button onClick={handleSearch}>\r\n                        <span>Search</span>\r\n                    </button>\r\n                </div>    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(NavSearch);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport NavSearch from \"./navSearch\";\r\n\r\nimport \"../../css/navbar.css\";\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <header className=\"navbar\">\r\n            <div className=\"container\">\r\n                <div className=\"nav-left\">\r\n                    <div className=\"logo\">\r\n                        <Link to=\"/\">\r\n                            <div className=\"img-wrapper\">\r\n                                <img src=\"/images/logo.png\" alt=\"logo\"/>\r\n                            </div>\r\n                            <div className=\"logo-text\">\r\n                                <span>PIZZA STACK</span>    \r\n                            </div>\r\n                        </Link>\r\n                    </div>    \r\n                </div>\r\n                <div className=\"search\">\r\n                    <div className=\"searchbar-wrapper\">\r\n                        <div className=\"label\">\r\n                            <span>ORDER LOOKUP:</span>\r\n                        </div>\r\n                        <NavSearch />    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nimport \"../../css/footer.css\";\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"generic-text\">\r\n                    <p>\r\n                        Pizzas are delivered shortly after they are cooked. \r\n                        Delivery time may vary based on location, traffic, driver safety, and other factors.\r\n                    </p>\r\n                    <p>\r\n                        Expect your pizza to arrive within an hour, but no less than thirty minutes.\r\n                    </p>\r\n                    <p>\r\n                        Payment is required upon delivery. We accept cash, credit, and mobile payments. \r\n                        Please consider giving your driver a tip. Keep in mind our drivers carry less than $30. \r\n                        It is advised that cash payments should be paid in exact change.\r\n                    </p>    \r\n                </div>\r\n                <p>Project stack:</p>\r\n                <div className=\"stack\">\r\n                    <img src=\"/images/spring-boot.png\" alt=\"spring-boot-icon\" />\r\n                    <img src=\"/images/mongodb.png\" alt=\"mongo-icon\" />\r\n                    <img src=\"/images/react.png\" alt=\"react-icon\" />\r\n                </div>    \r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"../../css/orderSummary.css\";\r\n\r\n//takes the order object as a prop (props.order)\r\n//takes the order total as a prop (props.total)\r\n\r\nconst OrderSummary = (props) => {\r\n\r\n    let order = props.order;\r\n\r\n    return (\r\n        <div className=\"order-review\">\r\n            <div className=\"order-pizza\">\r\n                <h3>Crust Type</h3>\r\n                <div className=\"order-item\" key={uuidv4()}>\r\n                    <div className=\"left\">\r\n                        <p>{order.crustType.type}</p>\r\n                    </div>\r\n                </div>\r\n                <h3>Crust Size</h3>\r\n                <div className=\"order-item\" key={uuidv4()}>\r\n                    <div className=\"left\">\r\n                        <p>{order.crust.size}</p>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <p>${(parseFloat(order.crust.price) * parseFloat(order.crustType.priceMultiplier)).toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n                <h3>Cheese</h3>    \r\n                <div className=\"order-item\" key={uuidv4()}>\r\n                    <div className=\"left\">\r\n                        <p>{order.cheese.amount}</p>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <p>${parseFloat(order.cheese.price).toFixed(2)}</p>\r\n                    </div>\r\n                </div> \r\n                <h3>Sauce</h3>   \r\n                <div className=\"order-item\" key={uuidv4()}>\r\n                    <div className=\"left\">\r\n                        <p>{order.sauce.amount}</p>\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        <p>${parseFloat(order.sauce.price).toFixed(2)}</p>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n            <div className=\"order-toppings\">\r\n                <h3>Toppings</h3>\r\n                {Object.keys(order.toppings).length === 0 ? (\r\n                    <div className=\"none\">\r\n                        no toppings\r\n                    </div>\r\n                ) : (\"\")}\r\n                {order.toppings.map(topping => {\r\n                    return (\r\n                        <div className=\"order-item\" key={uuidv4()}>\r\n                            <div className=\"left\">\r\n                                <p>{topping.name}</p>\r\n                            </div>\r\n                            <div className=\"right\">\r\n                                <p>${parseFloat((topping.price * order.crust.toppingMultiplier)).toFixed(2)}</p>\r\n                            </div>\r\n                        </div>    \r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"order-beverages\">\r\n                <h3>Beverages</h3>\r\n                {Object.keys(order.beverages).length === 0 ? (\r\n                    <div className=\"none\">\r\n                        no beverages\r\n                    </div>\r\n                ) : (\"\")}\r\n                {order.beverages.map(beverage => {\r\n                    return (\r\n                        <div className=\"order-item\" key={uuidv4()}>\r\n                            <div className=\"left\">\r\n                                <p>{beverage.name}</p>\r\n                            </div>\r\n                            <div className=\"right\">\r\n                                <p>${parseFloat(beverage.price).toFixed(2)}</p>\r\n                            </div>\r\n                        </div>    \r\n                    )\r\n                })}\r\n                \r\n            </div>\r\n            <div className=\"order-address\">\r\n                <h3>Delivery Info</h3>\r\n                <p className=\"delivery-label\">Email</p>\r\n                <p className=\"delivery-field\">\r\n                    {order.email}\r\n                </p>\r\n                <p className=\"delivery-label\">Phone Number</p>\r\n                <p className=\"delivery-field\">\r\n                    ({order.phoneNumber.substring(0, 3)}) {order.phoneNumber.substring(3, 6)}-\r\n                    {order.phoneNumber.substring(6, 10)}\r\n                </p>\r\n                <p className=\"delivery-label\">Deliver to</p>\r\n                <p className=\"delivery-field\">\r\n                    {order.streetAddress} <br></br> {order.city}, {order.state} {order.zipcode}\r\n                </p>\r\n            </div>\r\n            <div className=\"order-total\">\r\n                <h1>Total</h1>\r\n                <p>${props.total}</p>\r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderSummary;","/*\r\n    NOTE: This \"placeOrder\" component is a first draft. For this project, I was more\r\n    concerned with the backend. If I were to re-do this, I would break this page up\r\n    into several smaller components.\r\n*/\r\nimport React, { useState, useContext } from \"react\";\r\nimport { PizzaContext } from \"../../contexts/pizzaContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nimport OrderSummary from \"../orderSummary/orderSummary\";\r\n\r\nimport \"../../css/placeOrder.css\";\r\n\r\n\r\nconst PlaceOrder = (props) => {\r\n    \r\n    const [ order, setOrder ] = useState({\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        streetAddress: \"\",\r\n        city: \"\",\r\n        state: \"AL\",\r\n        zipcode: \"\",\r\n        crustType: {},\r\n        crust: {},\r\n        sauce: {},\r\n        cheese: {},\r\n        toppings: [],\r\n        beverages: []\r\n    });\r\n\r\n    const { pizza } = useContext(PizzaContext);\r\n\r\n    const [ validOrder, setValidOrder ] = useState(true);\r\n    const [ total, setTotal ] = useState(0);\r\n    const [ errors, setErrors ] = useState([]);\r\n    const [ orderConfirm, setOrderConfirm ] = useState(false);\r\n\r\n\r\n    //validate order\r\n    const validateOrder = () => {\r\n        let errors = [];\r\n\r\n        if(order.email.length === 0) {\r\n            errors.push(\"Please enter your email address.\");\r\n        }\r\n        if(!order.email.includes(\"@\")) {\r\n            errors.push(\"Enter a valid email. Must contain @ symbol.\");\r\n        }\r\n        if(order.phoneNumber.length === 0) {\r\n            errors.push(\"Please enter your phone number.\");\r\n        }\r\n        if(order.phoneNumber.length !== 10) {\r\n            errors.push(`Phone number must be 10 digits: \"555-555-5555\"`);\r\n        }\r\n        if(order.streetAddress.length === 0) {\r\n            errors.push(\"Please enter your street address.\");\r\n        }\r\n        if(order.city.length === 0) {\r\n            errors.push(\"Please enter your city.\");\r\n        }\r\n        if(order.state.length === 0) {\r\n            errors.push(\"Please select your state.\");\r\n        }\r\n        if(order.zipcode.length === 0) {\r\n            errors.push(\"Please enter your zipcode.\");\r\n        }\r\n        if(order.zipcode.length !== 5) {\r\n            errors.push(\"Your zipcode must be 5 digits.\");\r\n        }\r\n        if(Object.keys(order.crustType).length === 0) {\r\n            errors.push(\"Please select a crust thickness.\");\r\n        }\r\n        if(Object.keys(order.crust).length === 0) {\r\n            errors.push(\"Please select a crust size.\");\r\n        }\r\n        if(Object.keys(order.sauce).length === 0) {\r\n            errors.push(\"Please select a sauce option.\");\r\n        }\r\n        if(Object.keys(order.cheese).length === 0) {\r\n            errors.push(\"Please select a cheese option.\");\r\n        }\r\n\r\n        if(errors.length > 0) {\r\n            setErrors(errors);\r\n            setValidOrder(false);\r\n            window.scrollTo(0,0);\r\n            return false;\r\n        }\r\n        else {\r\n            setValidOrder(true);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const calculateTotal = () => {\r\n        let validToppings = Object.keys(order.crustType).length === 0 || \r\n                            Object.keys(order.crust).length === 0 || \r\n                            Object.keys(order.sauce).length === 0 || \r\n                            Object.keys(order.cheese).length === 0;\r\n\r\n        if(!validToppings) {\r\n            let toppingsPrice = 0;\r\n            let beveragesPrice = 0;\r\n            let total = 0;\r\n\r\n            if(order.toppings.length > 0) {\r\n                order.toppings.forEach(topping => toppingsPrice += \r\n                    (parseFloat(topping.price) * parseFloat(order.crust.toppingMultiplier)));\r\n            }\r\n            \r\n            if(order.beverages.length > 0) {\r\n                order.beverages.forEach(beverage => beveragesPrice += parseFloat(beverage.price));    \r\n            }\r\n\r\n            total = (parseFloat(order.crust.price) * \r\n                    parseFloat(order.crustType.priceMultiplier)) + \r\n                    parseFloat(order.sauce.price) + \r\n                    parseFloat(order.cheese.price) + \r\n                    parseFloat(toppingsPrice) + \r\n                    parseFloat(beveragesPrice);\r\n\r\n            setTotal(total.toFixed(2));\r\n        }\r\n    }\r\n\r\n    //POST order\r\n    const postOrder = async () => {\r\n        const response = await fetch(\"/api/orders\", {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(order)\r\n        });\r\n        if(response.status === 200) {\r\n            props.history.push(`/orders/${order.email}`);\r\n        }\r\n        else {\r\n            setErrors([\"There was a problem placing your order. Please review your order and try again.\"]);\r\n        }\r\n    }\r\n\r\n    //confirm order\r\n    const confirmOrder = () => {\r\n        const valid = validateOrder();\r\n        if(valid) {\r\n            calculateTotal();\r\n            setOrderConfirm(true);\r\n            window.scrollTo(0,0);\r\n        }\r\n        else {\r\n            setOrderConfirm(false);\r\n        }\r\n    }\r\n\r\n    //goBack - return to place order form\r\n    const goBack = () => {\r\n        setOrderConfirm(false);\r\n    }\r\n\r\n    //submit order\r\n    const submitOrder = () => {\r\n        if(validateOrder()) {\r\n            postOrder();\r\n        }\r\n    }\r\n    \r\n\r\n    //handlers\r\n    const handleCrustType = (e) => {\r\n        let crustType = pizza.crustTypes.find(crustType => crustType.id === e.target.value);\r\n        if(crustType) {\r\n            setOrder({...order, crustType: crustType});\r\n        }\r\n    }\r\n\r\n    const handleCrustSize = (e) => {\r\n        let crustSize = pizza.crustSizes.find(crustSize => crustSize.id === e.target.value);\r\n        if(crustSize) {\r\n            setOrder({...order, crust: crustSize});\r\n        }\r\n    }\r\n\r\n    const handleSauce = (e) => {\r\n        let sauce = pizza.sauce.find(sauce => sauce.id === e.target.value);\r\n        if(sauce) {\r\n            setOrder({...order, sauce: sauce});\r\n        }\r\n    }\r\n\r\n    const handleCheese = (e) => {\r\n        let cheese = pizza.cheese.find(cheese => cheese.id === e.target.value);\r\n        if(cheese) {\r\n            setOrder({...order, cheese: cheese});\r\n        }\r\n    }\r\n\r\n    const handleTopping = (e) => {\r\n        e.preventDefault();\r\n        if(e.currentTarget.classList.contains(\"topping-option\")) {\r\n            e.currentTarget.classList.toggle(\"selected\");\r\n            \r\n            if(e.currentTarget.classList.contains(\"selected\")) {\r\n                addTopping(e.currentTarget.getAttribute(\"data-id\"));\r\n            }\r\n            else {\r\n                removeTopping(e.currentTarget.getAttribute(\"data-id\"));\r\n            }\r\n        } \r\n    }\r\n    const addTopping = (id) => {\r\n        let topping = pizza.toppings.find(topping => topping.id === id);\r\n        if(topping) {\r\n            setOrder({...order, toppings: [...order.toppings, topping]});\r\n        }\r\n    }\r\n    const removeTopping = (id) => {\r\n        let topping = order.toppings.find(topping => topping.id === id);\r\n        if(topping) {\r\n            let toppings = order.toppings.filter(topping => topping.id !== id);\r\n            setOrder({...order, toppings: toppings});\r\n        }\r\n    }\r\n\r\n    const handleBeverage = (e) => {\r\n        e.preventDefault();\r\n        if(e.currentTarget.classList.contains(\"beverage-option\")) {\r\n            e.currentTarget.classList.toggle(\"selected\");\r\n            \r\n            if(e.currentTarget.classList.contains(\"selected\")) {\r\n                addBeverage(e.currentTarget.getAttribute(\"data-id\"));\r\n            }\r\n            else {\r\n                removeBeverage(e.currentTarget.getAttribute(\"data-id\"));\r\n            }\r\n        }\r\n    }\r\n    const addBeverage = (id) => {\r\n        let beverage = pizza.beverages.find(beverage => beverage.id === id);\r\n        if(beverage) {\r\n            setOrder({...order, beverages: [...order.beverages, beverage]});\r\n        }\r\n    }\r\n    const removeBeverage = (id) => {\r\n        let beverage = order.beverages.find(beverage => beverage.id === id);\r\n        if(beverage) {\r\n            let beverages = order.beverages.filter(beverage => beverage.id !== id);\r\n            setOrder({...order, beverages: beverages});\r\n        }\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        setOrder({...order, email: e.target.value});\r\n    }\r\n    const handlePhoneNumber = (e) => {\r\n        setOrder({ ...order, phoneNumber: e.target.value.replace(/\\D/g,'') });\r\n    }\r\n    const handleStreetAddress = (e) => {\r\n        setOrder({...order, streetAddress: e.target.value});\r\n    }\r\n    const handleCity = (e) => {\r\n        setOrder({...order, city: e.target.value});\r\n    }\r\n    const handleState = (e) => {\r\n        setOrder({...order, state: e.target.value});\r\n    }\r\n    const handleZipcode = (e) => {\r\n        setOrder({ ...order, zipcode: e.target.value.replace(/\\D/g,'') });\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <main className=\"place-order\">\r\n            <div className=\"container\">\r\n\r\n            <div className=\"title\">\r\n                <h1>Your Pizza</h1>    \r\n            </div>\r\n\r\n            { pizza ? (<React.Fragment>\r\n\r\n            \r\n            { !validOrder && errors.length > 0 &&\r\n                <div className=\"errors\">\r\n                    <h3>Order cannot be placed</h3>\r\n                    {errors ? (\r\n                        errors.map(error => {\r\n                            return (\r\n                                <p key={uuidv4()}>{error}</p>\r\n                            )\r\n                        })\r\n                    ) : (\"\")}\r\n                </div>    \r\n            }\r\n\r\n            <div className={`${orderConfirm ? (\"hidden\") : (\"\")}`}>\r\n            <div className=\"crust-type\">\r\n                <h2>Crust Thickness</h2>\r\n                <div className=\"crust-types\">\r\n                    <ul className=\"base-options-list\">\r\n                        {pizza.crustTypes.map(crustType => {\r\n                            return (\r\n                                <li className=\"base-option\" key={crustType.id}>\r\n                                    <input type=\"radio\" id={crustType.id} \r\n                                        name=\"crustType\" value={crustType.id} required\r\n                                        onChange={handleCrustType}\r\n                                    />\r\n                                    <label htmlFor={crustType.id}>{crustType.type}</label>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"crust-size\">\r\n                <h2>Crust Size</h2>\r\n                <div className=\"crust-sizes\">\r\n                    <ul className=\"base-options-list\">\r\n                        {pizza.crustSizes.map(crustSize => {\r\n                            return (\r\n                                <li className=\"base-option\" key={crustSize.id}>\r\n                                    <input type=\"radio\" id={crustSize.id} \r\n                                        name=\"crustSize\" value={crustSize.id} required\r\n                                        onChange={handleCrustSize}\r\n                                    />\r\n                                    <label htmlFor={crustSize.id}>{crustSize.size}</label>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sauce\">\r\n                <h2>Sauce Amount</h2>\r\n                <div className=\"sauce-options\">\r\n                    <ul className=\"base-options-list\">\r\n                        {pizza.sauce.map(sauce => {\r\n                            return (\r\n                                <li className=\"base-option\" key={sauce.id}>\r\n                                    <input type=\"radio\" id={sauce.id} \r\n                                        name=\"sauce\" value={sauce.id} required \r\n                                        onChange={handleSauce}\r\n                                    />\r\n                                    <label htmlFor={sauce.id}>{sauce.amount}</label>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"cheese\">\r\n                <h2>Cheese Amount</h2>\r\n                <div className=\"cheese-options\">\r\n                    <ul className=\"base-options-list\">\r\n                        {pizza.cheese.map(cheese => {\r\n                            return (\r\n                                <li className=\"base-option\" key={cheese.id}>\r\n                                    <input type=\"radio\" id={cheese.id} \r\n                                        name=\"cheese\" value={cheese.id} required\r\n                                        onChange={handleCheese}\r\n                                    />\r\n                                    <label htmlFor={cheese.id}>{cheese.amount}</label>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"toppings\">\r\n                <h2>Toppings</h2>\r\n                <div className=\"topping-options\">\r\n                    <ul className=\"topping-options-list\">\r\n                        {pizza.toppings.map(topping => {\r\n                            return (\r\n                                <li className=\"topping-option\" key={topping.id} \r\n                                data-id={topping.id} onClick={handleTopping}>\r\n                                    <h3>{topping.name}</h3>\r\n                                    <img src={`/images/toppings/${topping.name}.jpg`} alt=\"topping-img\" />\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"beverages\">\r\n                <h2>Beverages</h2>\r\n                <div className=\"beverage-options\">\r\n                    <ul className=\"beverage-options-list\">\r\n                        {pizza.beverages.map(beverage => {\r\n                            return (\r\n                                <li className=\"beverage-option\" key={beverage.id}\r\n                                data-id={beverage.id} onClick={handleBeverage}>\r\n                                    <h3>{beverage.name}</h3>\r\n                                    <p>2 L</p>\r\n                                    <img src={`/images/beverages/${beverage.name}.jpg`} alt=\"beverage-img\" />\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"delivery-info\">\r\n                <div className=\"delivery-title\">\r\n                    <h2>Delivery Information</h2>\r\n                </div>\r\n                <div className=\"delivery\">\r\n                    <div className=\"delivery-field\">\r\n                        <p>Email Address</p>\r\n                        <input type=\"email\" placeholder=\"myemail@example.com\" \r\n                            required onBlur={handleEmail} />\r\n                    </div>\r\n                    <div className=\"delivery-field\">\r\n                        <p>Phone Number</p>\r\n                        <input type=\"text\" placeholder=\"555-555-5555\" \r\n                            required onBlur={handlePhoneNumber} />\r\n                    </div>\r\n                    <div className=\"delivery-field\">\r\n                        <p>Street Address</p>\r\n                        <input type=\"text\" placeholder=\"742 Evergreen Terrace\" \r\n                            required onBlur={handleStreetAddress} />\r\n                    </div>\r\n                    <div className=\"delivery-field\">\r\n                        <p>City</p>\r\n                        <input type=\"text\" placeholder=\"Houston\" \r\n                            required onBlur={handleCity} />\r\n                    </div>\r\n                    <div className=\"delivery-field\">\r\n                        <p>State</p>\r\n                        <select onChange={handleState}>\r\n                            <option value=\"AL\">Alabama</option>\r\n                            <option value=\"AK\">Alaska</option>\r\n                            <option value=\"AZ\">Arizona</option>\r\n                            <option value=\"AR\">Arkansas</option>\r\n                            <option value=\"CA\">California</option>\r\n                            <option value=\"CO\">Colorado</option>\r\n                            <option value=\"CT\">Connecticut</option>\r\n                            <option value=\"DE\">Delaware</option>\r\n                            <option value=\"DC\">District Of Columbia</option>\r\n                            <option value=\"FL\">Florida</option>\r\n                            <option value=\"GA\">Georgia</option>\r\n                            <option value=\"HI\">Hawaii</option>\r\n                            <option value=\"ID\">Idaho</option>\r\n                            <option value=\"IL\">Illinois</option>\r\n                            <option value=\"IN\">Indiana</option>\r\n                            <option value=\"IA\">Iowa</option>\r\n                            <option value=\"KS\">Kansas</option>\r\n                            <option value=\"KY\">Kentucky</option>\r\n                            <option value=\"LA\">Louisiana</option>\r\n                            <option value=\"ME\">Maine</option>\r\n                            <option value=\"MD\">Maryland</option>\r\n                            <option value=\"MA\">Massachusetts</option>\r\n                            <option value=\"MI\">Michigan</option>\r\n                            <option value=\"MN\">Minnesota</option>\r\n                            <option value=\"MS\">Mississippi</option>\r\n                            <option value=\"MO\">Missouri</option>\r\n                            <option value=\"MT\">Montana</option>\r\n                            <option value=\"NE\">Nebraska</option>\r\n                            <option value=\"NV\">Nevada</option>\r\n                            <option value=\"NH\">New Hampshire</option>\r\n                            <option value=\"NJ\">New Jersey</option>\r\n                            <option value=\"NM\">New Mexico</option>\r\n                            <option value=\"NY\">New York</option>\r\n                            <option value=\"NC\">North Carolina</option>\r\n                            <option value=\"ND\">North Dakota</option>\r\n                            <option value=\"OH\">Ohio</option>\r\n                            <option value=\"OK\">Oklahoma</option>\r\n                            <option value=\"OR\">Oregon</option>\r\n                            <option value=\"PA\">Pennsylvania</option>\r\n                            <option value=\"RI\">Rhode Island</option>\r\n                            <option value=\"SC\">South Carolina</option>\r\n                            <option value=\"SD\">South Dakota</option>\r\n                            <option value=\"TN\">Tennessee</option>\r\n                            <option value=\"TX\">Texas</option>\r\n                            <option value=\"UT\">Utah</option>\r\n                            <option value=\"VT\">Vermont</option>\r\n                            <option value=\"VA\">Virginia</option>\r\n                            <option value=\"WA\">Washington</option>\r\n                            <option value=\"WV\">West Virginia</option>\r\n                            <option value=\"WI\">Wisconsin</option>\r\n                            <option value=\"WY\">Wyoming</option>\r\n                        </select>\t\r\n                    </div>\r\n                    <div className=\"delivery-field\">\r\n                        <p>Zipcode</p>\r\n                        <input type=\"text\" placeholder=\"12345\" \r\n                            required onBlur={handleZipcode} />\r\n                    </div>    \r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\"confirm-button\">\r\n                <button className=\"confirm\" onClick={confirmOrder}>Confirm Order</button>\r\n            </div>\r\n            </div>\r\n\r\n\r\n            <div className={`${orderConfirm ? (\"\") : (\"hidden\")}`}>\r\n            <div className=\"order-summary\">\r\n                <div className=\"summary-title\">\r\n                    <h2>Order Summary</h2>\r\n                </div>\r\n                <div className=\"summary-wrapper\">\r\n                    <div className=\"back-button\" onClick={goBack}>\r\n                        <button className=\"back\">Back</button>\r\n                    </div>\r\n                    <OrderSummary \r\n                        order={order}\r\n                        total={total}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"order-submit\">\r\n                <button onClick={submitOrder}>Place Order</button>\r\n            </div>\r\n            </div>\r\n\r\n            </React.Fragment>) : (\"Please wait...\")}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default withRouter(PlaceOrder);","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Navbar from \"../navbar/navbar\";\r\nimport Footer from \"../footer/footer\";\r\nimport OrderSummary from \"../orderSummary/orderSummary\";\r\n\r\nimport \"../../css/viewOrders.css\";\r\n\r\n\r\nconst ViewOrders = (props) => {\r\n    window.scrollTo(0,0);\r\n\r\n    const [ orders, setOrders ] = useState(null);\r\n\r\n    const fetchOrders = async () => {\r\n        if(props.match.params.email) {\r\n            const response = await fetch(`/api/orders/${props.match.params.email}`);\r\n            const data = await response.json();\r\n            if(response.status === 200) {\r\n                setOrders(data);\r\n                if(data.length === 0) {\r\n                    props.history.push(\"/\");\r\n                }\r\n            }\r\n            else {\r\n                props.history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0,0);\r\n        fetchOrders();\r\n    }, [props.match.params.email])\r\n\r\n\r\n    const cancelOrder = async (e) => {\r\n        const orderId = e.target.getAttribute(\"data-id\");\r\n        const response = await fetch(`/api/orders/${orderId}`, {method: \"DELETE\"});\r\n        if(response.status === 200) {\r\n            const newOrders = orders.filter(order => order.id !== orderId);\r\n            setOrders(newOrders);\r\n            if(newOrders.length === 0) { props.history.push(\"/\") };\r\n            window.scrollTo(0,0);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <Navbar />\r\n        <div className=\"view-orders\">\r\n            <div className=\"container\">\r\n                <div className=\"your-orders\">\r\n                    <h1>Current Orders for <span>{props.match.params.email}</span></h1>\r\n                </div>\r\n                <div className=\"main-content\">\r\n                    {orders ? (\r\n                        <div className=\"orders\">\r\n                            {orders.map((order, i) => {\r\n                                return (\r\n                                    <div className=\"order-content\" key={uuidv4()}>\r\n                                        <h2>Order {i+1} <span>(Order no: {order.id})</span> </h2>\r\n                                        <OrderSummary \r\n                                            order={order}\r\n                                            total={order.orderTotal.toFixed(2)}\r\n                                        />\r\n                                        <div className=\"cancel-order\">\r\n                                            <button className=\"cancel-order-btn\"\r\n                                                onClick={cancelOrder}\r\n                                                data-id={order.id}\r\n                                            >Cancel Order</button>\r\n                                        </div> \r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>    \r\n                    ) : (\"Just a moment...\")}    \r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Footer />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(ViewOrders);","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport NavSearch from \"../navbar/navSearch\";\r\n\r\nimport \"../../css/home.css\";\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"order-pizza\">\r\n                <Link to=\"/place-order\">\r\n                    <h1>Place An Order</h1>\r\n                    <h3>Build Your Pizza</h3>\r\n                </Link>\r\n            </div>\r\n            <div className=\"lookup-order\">\r\n                <h2>View your orders</h2>\r\n                <NavSearch />\r\n            </div>\r\n            <div className=\"filler\">\r\n                <p>Serving quality pizza since 1991</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../../css/404.css\";\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h1>We could not find that page.</h1>\r\n            <Link to=\"/\">Return To Homepage</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport PizzaContextProvider from './contexts/pizzaContext';\n\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from './components/footer/footer';\nimport PlaceOrder from './components/placeOrder/placeOrder';\nimport ViewOrders from './components/viewOrders/viewOrders';\nimport Home from './components/homepage/home';\nimport NotFound from './components/404/notFound';\n\nimport \"./css/app.css\";\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"app-container\">\n\t\t\t<BrowserRouter>\n\t\t\t<PizzaContextProvider>\n\n\t\t\t\t<Switch>\n\t\t\t\t\t\n\t\t\t\t\t<Route exact path=\"/\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t\t<Footer />\t\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path=\"/place-order\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<PlaceOrder />\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route exact path=\"/orders/:email\" component={ViewOrders} />\n\n\t\t\t\t\t<Route exact path=\"/404\">\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<NotFound />\n\t\t\t\t\t\t<Footer />\n\t\t\t\t\t</Route>\n\n\t\t\t\t\t<Route path=\"*\">\n\t\t\t\t\t\t<Redirect to=\"/404\" />\t\n\t\t\t\t\t</Route>\n\n\t\t\t\t</Switch>\n\t\t\t\t\t\t\n\t\t\t</PizzaContextProvider>\n\t\t\t</BrowserRouter>\t\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}